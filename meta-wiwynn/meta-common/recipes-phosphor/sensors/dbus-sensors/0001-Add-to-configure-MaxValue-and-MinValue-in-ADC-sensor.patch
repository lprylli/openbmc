From 8cc7af661caf66dd8bb80fc174e023e244e0b714 Mon Sep 17 00:00:00 2001
From: Frederick Lee <Frederick_Lee@wiwynn.com>
Date: Mon, 16 Dec 2019 13:33:16 +0800
Subject: [PATCH] Add to configure MaxValue and MinValue in ADC sensor JSON

---
 include/ADCSensor.hpp |  3 ++-
 src/ADCSensor.cpp     |  9 +++++----
 src/ADCSensorMain.cpp | 20 +++++++++++++++++++-
 3 files changed, 26 insertions(+), 6 deletions(-)

diff --git a/include/ADCSensor.hpp b/include/ADCSensor.hpp
index dfd8713..602150f 100644
--- a/include/ADCSensor.hpp
+++ b/include/ADCSensor.hpp
@@ -60,7 +60,8 @@ class ADCSensor : public Sensor
               std::vector<thresholds::Threshold>&& thresholds,
               const double scaleFactor, PowerState readState,
               const std::string& sensorConfiguration,
-              std::optional<BridgeGpio>&& bridgeGpio);
+              std::optional<BridgeGpio>&& bridgeGpio,
+              const double MaxValue, const double MinValue);
     ~ADCSensor();
 
   private:
diff --git a/src/ADCSensor.cpp b/src/ADCSensor.cpp
index 22194e8..1f6d6f1 100644
--- a/src/ADCSensor.cpp
+++ b/src/ADCSensor.cpp
@@ -40,8 +40,8 @@ static constexpr unsigned int gpioBridgeEnableMs = 20;
 static constexpr unsigned int sensorScaleFactor = 1000;
 
 static constexpr double roundFactor = 10000; // 3 decimal places
-static constexpr double maxReading = 20;
-static constexpr double minReading = 0;
+// static constexpr double maxReading = 20;
+// static constexpr double minReading = 0;
 
 ADCSensor::ADCSensor(const std::string& path,
                      sdbusplus::asio::object_server& objectServer,
@@ -50,10 +50,11 @@ ADCSensor::ADCSensor(const std::string& path,
                      std::vector<thresholds::Threshold>&& _thresholds,
                      const double scaleFactor, PowerState readState,
                      const std::string& sensorConfiguration,
-                     std::optional<BridgeGpio>&& bridgeGpio) :
+                     std::optional<BridgeGpio>&& bridgeGpio,
+                     const double MaxValue, const double MinValue) :
     Sensor(boost::replace_all_copy(sensorName, " ", "_"),
            std::move(_thresholds), sensorConfiguration,
-           "xyz.openbmc_project.Configuration.ADC", maxReading, minReading),
+           "xyz.openbmc_project.Configuration.ADC", MaxValue, MinValue),
     objServer(objectServer), inputDev(io, open(path.c_str(), O_RDONLY)),
     waitTimer(io), path(path), errCount(0), scaleFactor(scaleFactor),
     bridgeGpio(std::move(bridgeGpio)), readState(std::move(readState)),
diff --git a/src/ADCSensorMain.cpp b/src/ADCSensorMain.cpp
index 1b56d93..b0d5e4b 100644
--- a/src/ADCSensorMain.cpp
+++ b/src/ADCSensorMain.cpp
@@ -210,6 +210,24 @@ void createSensors(
                                              findScaleFactor->second);
                 }
 
+                // wiw - Read the MaxValue from JSON. - 20190819
+                auto findMaxValue = baseConfiguration->second.find("MaxValue");
+                double MaxValue = 20;
+                if (findMaxValue != baseConfiguration->second.end())
+                {
+                    MaxValue =
+                        std::visit(VariantToDoubleVisitor(), findMaxValue->second);
+                }
+
+                // wiw - Read the MinValue from JSON. - 20190819
+                auto findMinValue = baseConfiguration->second.find("MinValue");
+                double MinValue = 0;
+                if (findMinValue != baseConfiguration->second.end())
+                {
+                    MinValue =
+                        std::visit(VariantToDoubleVisitor(), findMinValue->second);
+                }
+
                 auto findPowerOn = baseConfiguration->second.find("PowerState");
                 PowerState readState = PowerState::always;
                 if (findPowerOn != baseConfiguration->second.end())
@@ -272,7 +290,7 @@ void createSensors(
                 sensor = std::make_unique<ADCSensor>(
                     path.string(), objectServer, dbusConnection, io, sensorName,
                     std::move(sensorThresholds), scaleFactor, readState,
-                    *interfacePath, std::move(bridgeGpio));
+                    *interfacePath, std::move(bridgeGpio), MaxValue, MinValue);
             }
         }));
 
-- 
2.24.1

