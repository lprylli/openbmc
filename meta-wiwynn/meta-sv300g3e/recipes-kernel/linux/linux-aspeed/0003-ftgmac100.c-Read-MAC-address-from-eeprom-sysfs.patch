From a50463c73c38bbf6769042a44f6a7fda9824b99a Mon Sep 17 00:00:00 2001
From: Frederick Lee <Frederick_Lee@wiwynn.com>
Date: Fri, 20 Sep 2019 07:40:15 +0800
Subject: [PATCH 2/2] ftgmac100.c Read MAC address from eeprom sysfs

---
 drivers/net/ethernet/faraday/ftgmac100.c | 102 +++++++++++++++++++++++
 1 file changed, 102 insertions(+)

diff --git a/drivers/net/ethernet/faraday/ftgmac100.c b/drivers/net/ethernet/faraday/ftgmac100.c
index 9b7af94a40bb..c65cd7d6a566 100644
--- a/drivers/net/ethernet/faraday/ftgmac100.c
+++ b/drivers/net/ethernet/faraday/ftgmac100.c
@@ -27,6 +27,13 @@
 #include <net/ip.h>
 #include <net/ncsi.h>
 
+#if 1 // wiw
+#include <linux/file.h>
+#include <linux/fs.h>
+#include <linux/namei.h>
+#include <linux/slab.h>
+#endif
+
 #include "ftgmac100.h"
 
 #define DRV_NAME	"ftgmac100"
@@ -51,6 +58,22 @@
 #define FTGMAC_100MHZ		100000000
 #define FTGMAC_25MHZ		25000000
 
+#if 1 // wiw
+#define EEPROM_BUS_ID 6
+#define EEPROM_SLAVE_ADDR 54
+#define MAC_OFFSET 0x1900
+#define ETH_INDEX_0 2
+
+#define EXPAND(x) x
+#define STRINGIZE(str) #str
+#define EXPAND_STRINGIZE(str) STRINGIZE(str)
+#define MAKE_DEVICE(bus_id, slave_addr) EXPAND(bus_id-00)slave_addr
+#define GET_EEPROM_PATH(bus_id, slave_addr) EXPAND_STRINGIZE(/sys/bus/i2c/devices/MAKE_DEVICE(bus_id, slave_addr)/eeprom)
+
+static const char *g_eeprom_file = GET_EEPROM_PATH(EEPROM_BUS_ID, EEPROM_SLAVE_ADDR);
+static bool *g_mac_initialized = false;
+#endif
+
 struct ftgmac100 {
 	/* Registers */
 	struct resource *res;
@@ -109,6 +132,18 @@ struct ftgmac100 {
 	bool is_aspeed;
 };
 
+#if 1 // wiw
+static struct file *kernel_open(const char *filename, int flags, umode_t mode)
+{
+	struct file *filp = NULL;
+	mm_segment_t oldfs = get_fs();
+	set_fs(KERNEL_DS);
+	filp = filp_open(filename, flags, mode);
+	set_fs(oldfs);
+	return filp;
+}
+#endif
+
 static int ftgmac100_reset_mac(struct ftgmac100 *priv, u32 maccr)
 {
 	struct net_device *netdev = priv->netdev;
@@ -210,6 +245,60 @@ static void ftgmac100_initial_mac(struct ftgmac100 *priv)
 	}
 }
 
+#if 1 // wiw
+static void ftgmac100_set_mac_from_eeprom(struct ftgmac100 *priv)
+{
+	u8 mac[ETH_ALEN];
+	struct file *filp;
+	struct inode *inode;
+	struct path path;
+	int retval;
+
+	if (g_mac_initialized) {
+		goto exit;
+	}
+
+	netdev_info(priv->netdev, "Checking EEPROM from sysfs\n");
+	if (!(retval = kern_path(g_eeprom_file, LOOKUP_FOLLOW, &path))) {
+		inode = path.dentry->d_inode;
+		if (S_ISDIR(inode->i_mode)) {
+			netdev_err(priv->netdev, "The given EEPROM path is not a file: %s\n", g_eeprom_file);
+		}
+	}
+	else {
+		netdev_err(priv->netdev, "Failed to check EEPROM (code: %d): %s\n", retval, g_eeprom_file);
+		goto exit;
+	}
+
+	netdev_info(priv->netdev, "Opening EEPROM through sysfs\n");
+	filp = kernel_open(g_eeprom_file, O_RDONLY, 0);
+	if (IS_ERR(filp)) {
+		netdev_err(priv->netdev, "Failed to open EEPROM (code: %d)\n", PTR_ERR(filp));
+		goto exit;
+	}
+
+	filp->f_pos = MAC_OFFSET;
+
+	netdev_info(priv->netdev, "Reading MAC address from EEPROM\n");
+	if ((retval = kernel_read(filp, mac, ETH_ALEN, &filp->f_pos)) <= 0) {
+		netdev_err(priv->netdev, "Failed to read EEPROM\n");
+		goto close_exit;
+	}
+
+	if (is_valid_ether_addr(mac)) {
+		netdev_info(priv->netdev, "Set MAC address %pM\n", mac);
+		ether_addr_copy(priv->netdev->dev_addr, mac);
+		g_mac_initialized = true;
+	}
+
+close_exit:
+	filp_close(filp, NULL);
+
+exit:
+	return;
+}
+#endif
+
 static int ftgmac100_set_mac_addr(struct net_device *dev, void *p)
 {
 	int ret;
@@ -1475,6 +1564,12 @@ static int ftgmac100_open(struct net_device *netdev)
 	}
 
 	if (netdev->phydev) {
+#if 1 // wiw
+        if (priv->is_aspeed && netdev->ifindex == ETH_INDEX_0) 
+		{
+			ftgmac100_set_mac_from_eeprom(priv);
+		}
+#endif
 		/* If we have a PHY, start polling */
 		phy_start(netdev->phydev);
 	} else if (priv->use_ncsi) {
@@ -1904,6 +1999,13 @@ static int ftgmac100_remove(struct platform_device *pdev)
 	struct net_device *netdev;
 	struct ftgmac100 *priv;
 
+#if 1 // wiw
+	if (g_mac_initialized)
+	{
+		g_mac_initialized = false;
+	}
+#endif
+
 	netdev = platform_get_drvdata(pdev);
 	priv = netdev_priv(netdev);
 
-- 
2.22.0

