From 2bdaae6eb2ac360e250b91bec2f76cc2e3a34794 Mon Sep 17 00:00:00 2001
From: Frederick Lee <Frederick_Lee@wiwynn.com>
Date: Thu, 26 Sep 2019 16:46:19 +0800
Subject: [PATCH] Add to support IPMI Set Power Cycle Interval command

---
 chassishandler.cpp | 36 ++++++++++++++++++++++++++++++++++++
 1 file changed, 36 insertions(+)

diff --git a/chassishandler.cpp b/chassishandler.cpp
index 2e911f9..a3465ad 100644
--- a/chassishandler.cpp
+++ b/chassishandler.cpp
@@ -110,6 +110,9 @@ static constexpr const char* resetButtonIntf =
 static constexpr const char* resetButtonPath =
     "/xyz/openbmc_project/Chassis/Buttons/Reset0";
 
+static constexpr const char* pwrCyIntConfPath =
+    "/etc/default/obmc/phosphor-reboot-host/reboot.conf";
+
 typedef struct
 {
     uint8_t cap_flags;
@@ -1767,6 +1770,34 @@ ipmi::RspType<uint3_t, // policy support
     return ipmi::responseSuccess(power_policy::allSupport, reserved);
 }
 
+/** @brief Set Power Cycle Interval command handler
+ */
+ipmi::RspType<> ipmiSetPowerCycleInterval(uint8_t pwrCycleInterval)
+{
+    std::fstream file;
+
+    file.open(pwrCyIntConfPath, std::ios::out | std::ios::trunc);
+    if (!file)
+    {
+        phosphor::logging::log<level::ERR>(
+            "Failed to open the power cycle interval conf file");
+        return ipmi::responseDestinationUnavailable();
+    }
+
+    file << "REBOOT_DELAY=" << static_cast<int>(pwrCycleInterval) << "\n";
+    if (file.fail())
+    {
+        phosphor::logging::log<level::ERR>(
+            "Failed to write the setting to the conf file");
+        file.close();
+        return ipmi::responseDestinationUnavailable();
+    }
+
+    file.close();
+
+    return ipmi::responseSuccess();
+}
+
 void register_netfn_chassis_functions()
 {
     createIdentifyTimer();
@@ -1818,4 +1849,9 @@ void register_netfn_chassis_functions()
                           ipmi::chassis::cmdSetPowerRestorePolicy,
                           ipmi::Privilege::Operator,
                           ipmiChassisSetPowerRestorePolicy);
+
+    // <Set Power Cycle Interval>
+    ipmi::registerHandler(ipmi::prioOemBase, ipmi::netFnChassis,
+                          ipmi::chassis::cmdSetPowerCycleInterval,
+                          ipmi::Privilege::Admin, ipmiSetPowerCycleInterval);
 }
-- 
2.22.0

