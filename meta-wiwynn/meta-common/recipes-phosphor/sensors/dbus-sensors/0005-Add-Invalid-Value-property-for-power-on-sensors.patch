From 9fcc689a8b1e90260a913896bcaf0c36df7875d7 Mon Sep 17 00:00:00 2001
From: Frederick Lee <Frederick_Lee@wiwynn.com>
Date: Mon, 11 Nov 2019 14:35:09 +0800
Subject: [PATCH] Add Invalid Value dbus sensor property for power-on sensors

---
 include/sensor.hpp | 26 ++++++++++++++++++++++++++
 1 file changed, 26 insertions(+)

diff --git a/include/sensor.hpp b/include/sensor.hpp
index 641d390..5f2f6fb 100644
--- a/include/sensor.hpp
+++ b/include/sensor.hpp
@@ -31,6 +31,7 @@ struct Sensor
     std::shared_ptr<sdbusplus::asio::dbus_interface> thresholdInterfaceCritical;
     std::shared_ptr<sdbusplus::asio::dbus_interface> association;
     double value = std::numeric_limits<double>::quiet_NaN();
+    bool invalidValue = false;
     bool overriddenState = false;
     bool internalSet = false;
     double hysteresis;
@@ -52,6 +53,14 @@ struct Sensor
         return 1;
     }
 
+    int setSensorValueInvalid(const bool& newState, bool& oldState)
+    {
+        oldState = newState;
+        invalidValue = newState;
+
+        return 1;
+    }
+
     void
         setInitialProperties(std::shared_ptr<sdbusplus::asio::connection>& conn)
     {
@@ -64,6 +73,11 @@ struct Sensor
                 return setSensorValue(newValue, oldValue);
             });
 
+        sensorInterface->register_property(
+            "InvalidValue", invalidValue, [&](const bool& newState, bool& oldState) {
+                return setSensorValueInvalid(newState, oldState);
+            });
+
         for (auto& threshold : thresholds)
         {
             std::shared_ptr<sdbusplus::asio::dbus_interface> iface;
@@ -146,12 +160,24 @@ struct Sensor
             internalSet = true;
             sensorInterface->set_property("Value", newValue);
             internalSet = false;
+
+        /*
             double diff = std::abs(value - newValue);
             if (std::isnan(diff) || diff > hysteresis)
             {
                 value = newValue;
             }
+        */
+            value = newValue;
             checkThresholds();
         }
     }
+
+    void updateValueInvalid(const bool& newState)
+    {
+        if(newState != invalidValue)
+        {
+            sensorInterface->set_property("InvalidValue", newState);
+        }
+    }
 };
-- 
2.22.0

