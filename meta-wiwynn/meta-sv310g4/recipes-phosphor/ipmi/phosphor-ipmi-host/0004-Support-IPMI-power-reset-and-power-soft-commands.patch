From 2ca5bceb0ad32884b7bf0f412cca1abd4db879a7 Mon Sep 17 00:00:00 2001
From: Frederick Lee <Frederick_Lee@wiwynn.com>
Date: Thu, 4 Feb 2021 14:29:31 +0800
Subject: [PATCH] Support IPMI power reset and power soft commands

---
 chassishandler.cpp | 41 +++++++++++++++++++++++++++++++++++++++--
 1 file changed, 39 insertions(+), 2 deletions(-)

diff --git a/chassishandler.cpp b/chassishandler.cpp
index 3250b2c..61f62f5 100644
--- a/chassishandler.cpp
+++ b/chassishandler.cpp
@@ -168,6 +168,34 @@ constexpr auto minutesPerCount = 60;
 
 } // namespace poh
 
+//---------------------------------------------
+// Calls to start systemd unit (service/target)
+//---------------------------------------------
+int startSystemdUnit(const std::string sysUnit)
+{
+    constexpr auto SYSTEMD_SERVICE = "org.freedesktop.systemd1";
+    constexpr auto SYSTEMD_OBJ_PATH = "/org/freedesktop/systemd1";
+    constexpr auto SYSTEMD_INTERFACE = "org.freedesktop.systemd1.Manager";
+
+    sdbusplus::bus::bus bus(ipmid_get_sd_bus_connection());
+
+    try
+    {
+        auto method = bus.new_method_call(SYSTEMD_SERVICE, SYSTEMD_OBJ_PATH,
+                                            SYSTEMD_INTERFACE, "StartUnit");
+        method.append(sysUnit, "replace");
+        bus.call_noreply(method);
+    }
+    catch (std::exception& e)
+    {
+        log<level::ERR>("Failed to start systemd unit",
+                        entry("EXCEPTION=%s", e.what()));
+        return -1;
+    }
+
+    return 0;
+}
+
 int getHostNetworkData(ipmi::message::Payload& payload)
 {
     ipmi::PropertyMap properties;
@@ -1418,6 +1446,12 @@ ipmi::RspType<> ipmiChassisControl(uint8_t chassisControl)
             break;
 
         case CMD_HARD_RESET:
+        {
+            // Start the system power reset service
+            std::string resetService("host-powerreset.service");
+            rc = startSystemdUnit(resetService);
+            break;
+        }
         case CMD_POWER_CYCLE:
             // SPEC has a section that says certain implementations can trigger
             // PowerOn if power is Off when a command to power cycle is
@@ -1433,10 +1467,13 @@ ipmi::RspType<> ipmiChassisControl(uint8_t chassisControl)
             break;
 
         case CMD_SOFT_OFF_VIA_OVER_TEMP:
+        {
             // Request Host State Manager to do a soft power off
-            rc = initiate_state_transition(State::Host::Transition::Off);
+            // rc = initiate_state_transition(State::Host::Transition::Off);
+            std::string softoffService("host-powersoft.service");
+            rc = startSystemdUnit(softoffService);
             break;
-
+        }
         case CMD_PULSE_DIAGNOSTIC_INTR:
             rc = setNmiProperty(true);
             break;
-- 
2.17.1

